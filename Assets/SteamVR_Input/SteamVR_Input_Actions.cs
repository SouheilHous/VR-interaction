//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_InteractUI;
        
        private static SteamVR_Action_Boolean p_default_Teleport;
        
        private static SteamVR_Action_Boolean p_default_GrabPinch;
        
        private static SteamVR_Action_Boolean p_default_GrabGrip;
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_default_Squeeze;
        
        private static SteamVR_Action_Boolean p_default_HeadsetOnHead;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnLeft;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnRight;
        
        private static SteamVR_Action_Single p_default_Trigger;
        
        private static SteamVR_Action_Single p_default_Grip;
        
        private static SteamVR_Action_Vector2 p_default_ThumbstickPosition;
        
        private static SteamVR_Action_Boolean p_default_Action1;
        
        private static SteamVR_Action_Boolean p_default_Action2;
        
        private static SteamVR_Action_Boolean p_default_ThumbstickButton;
        
        private static SteamVR_Action_Boolean p_default_MenuButton;
        
        private static SteamVR_Action_Boolean p_default_ScaleUp;
        
        private static SteamVR_Action_Boolean p_default_ScaleDown;
        
        private static SteamVR_Action_Boolean p_default_UndoButton;
        
        private static SteamVR_Action_Boolean p_default_RedoButton;
        
        private static SteamVR_Action_Boolean p_default_SwitchMenu;
        
        private static SteamVR_Action_Vector2 p_default_UltimateRadialMenuHover;
        
        private static SteamVR_Action_Boolean p_default_UltimateRadialMenuSelect;
        
        private static SteamVR_Action_Boolean p_default_InteractMain;
        
        private static SteamVR_Action_Pose p_default_UIPointer;
        
        private static SteamVR_Action_Boolean p_default_Toggle_ActionSet;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        private static SteamVR_Action_Vector2 p_platformer_Move;
        
        private static SteamVR_Action_Boolean p_platformer_Jump;
        
        private static SteamVR_Action_Boolean p_platformer_VR_Brush_Btn;
        
        private static SteamVR_Action_Vector2 p_platformer_MoveAround;
        
        private static SteamVR_Action_Vector2 p_platformer_Move_Y_Axis;
        
        private static SteamVR_Action_Boolean p_platformer_ToggleFlying;
        
        private static SteamVR_Action_Boolean p_platformer_IncreaseFlyingSpd;
        
        private static SteamVR_Action_Boolean p_platformer_DecreaseFlyingSPd;
        
        private static SteamVR_Action_Boolean p_platformer_M_Forward;
        
        private static SteamVR_Action_Boolean p_platformer_M_Left;
        
        private static SteamVR_Action_Boolean p_platformer_M_Right;
        
        private static SteamVR_Action_Boolean p_platformer_M_Backward;
        
        private static SteamVR_Action_Boolean p_platformer_BigJump;
        
        private static SteamVR_Action_Boolean p_platformer_InverseBigJump;
        
        private static SteamVR_Action_Boolean p_platformer_Toggle_ActionSet;
        
        private static SteamVR_Action_Vector2 p_platformer_TwoAxis;
        
        private static SteamVR_Action_Vector2 p_buggy_Steering;
        
        private static SteamVR_Action_Single p_buggy_Throttle;
        
        private static SteamVR_Action_Boolean p_buggy_Brake;
        
        private static SteamVR_Action_Boolean p_buggy_Reset;
        
        private static SteamVR_Action_Pose p_mixedreality_ExternalCamera;
        
        public static SteamVR_Action_Boolean default_InteractUI
        {
            get
            {
                return SteamVR_Actions.p_default_InteractUI.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Teleport
        {
            get
            {
                return SteamVR_Actions.p_default_Teleport.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabPinch
        {
            get
            {
                return SteamVR_Actions.p_default_GrabPinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_default_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single default_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_default_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_default_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnLeft
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnRight
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single default_Trigger
        {
            get
            {
                return SteamVR_Actions.p_default_Trigger.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Single default_Grip
        {
            get
            {
                return SteamVR_Actions.p_default_Grip.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_ThumbstickPosition
        {
            get
            {
                return SteamVR_Actions.p_default_ThumbstickPosition.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Action1
        {
            get
            {
                return SteamVR_Actions.p_default_Action1.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Action2
        {
            get
            {
                return SteamVR_Actions.p_default_Action2.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_ThumbstickButton
        {
            get
            {
                return SteamVR_Actions.p_default_ThumbstickButton.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_MenuButton
        {
            get
            {
                return SteamVR_Actions.p_default_MenuButton.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_ScaleUp
        {
            get
            {
                return SteamVR_Actions.p_default_ScaleUp.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_ScaleDown
        {
            get
            {
                return SteamVR_Actions.p_default_ScaleDown.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_UndoButton
        {
            get
            {
                return SteamVR_Actions.p_default_UndoButton.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_RedoButton
        {
            get
            {
                return SteamVR_Actions.p_default_RedoButton.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SwitchMenu
        {
            get
            {
                return SteamVR_Actions.p_default_SwitchMenu.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_UltimateRadialMenuHover
        {
            get
            {
                return SteamVR_Actions.p_default_UltimateRadialMenuHover.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean default_UltimateRadialMenuSelect
        {
            get
            {
                return SteamVR_Actions.p_default_UltimateRadialMenuSelect.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_InteractMain
        {
            get
            {
                return SteamVR_Actions.p_default_InteractMain.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_UIPointer
        {
            get
            {
                return SteamVR_Actions.p_default_UIPointer.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Toggle_ActionSet
        {
            get
            {
                return SteamVR_Actions.p_default_Toggle_ActionSet.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Vector2 platformer_Move
        {
            get
            {
                return SteamVR_Actions.p_platformer_Move.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_Jump
        {
            get
            {
                return SteamVR_Actions.p_platformer_Jump.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_VR_Brush_Btn
        {
            get
            {
                return SteamVR_Actions.p_platformer_VR_Brush_Btn.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 platformer_MoveAround
        {
            get
            {
                return SteamVR_Actions.p_platformer_MoveAround.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Vector2 platformer_Move_Y_Axis
        {
            get
            {
                return SteamVR_Actions.p_platformer_Move_Y_Axis.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_ToggleFlying
        {
            get
            {
                return SteamVR_Actions.p_platformer_ToggleFlying.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_IncreaseFlyingSpd
        {
            get
            {
                return SteamVR_Actions.p_platformer_IncreaseFlyingSpd.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_DecreaseFlyingSPd
        {
            get
            {
                return SteamVR_Actions.p_platformer_DecreaseFlyingSPd.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_M_Forward
        {
            get
            {
                return SteamVR_Actions.p_platformer_M_Forward.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_M_Left
        {
            get
            {
                return SteamVR_Actions.p_platformer_M_Left.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_M_Right
        {
            get
            {
                return SteamVR_Actions.p_platformer_M_Right.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_M_Backward
        {
            get
            {
                return SteamVR_Actions.p_platformer_M_Backward.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_BigJump
        {
            get
            {
                return SteamVR_Actions.p_platformer_BigJump.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_InverseBigJump
        {
            get
            {
                return SteamVR_Actions.p_platformer_InverseBigJump.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_Toggle_ActionSet
        {
            get
            {
                return SteamVR_Actions.p_platformer_Toggle_ActionSet.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 platformer_TwoAxis
        {
            get
            {
                return SteamVR_Actions.p_platformer_TwoAxis.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Vector2 buggy_Steering
        {
            get
            {
                return SteamVR_Actions.p_buggy_Steering.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Single buggy_Throttle
        {
            get
            {
                return SteamVR_Actions.p_buggy_Throttle.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean buggy_Brake
        {
            get
            {
                return SteamVR_Actions.p_buggy_Brake.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean buggy_Reset
        {
            get
            {
                return SteamVR_Actions.p_buggy_Reset.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose mixedreality_ExternalCamera
        {
            get
            {
                return SteamVR_Actions.p_mixedreality_ExternalCamera.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_Trigger,
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_ThumbstickPosition,
                    SteamVR_Actions.default_Action1,
                    SteamVR_Actions.default_Action2,
                    SteamVR_Actions.default_ThumbstickButton,
                    SteamVR_Actions.default_MenuButton,
                    SteamVR_Actions.default_ScaleUp,
                    SteamVR_Actions.default_ScaleDown,
                    SteamVR_Actions.default_UndoButton,
                    SteamVR_Actions.default_RedoButton,
                    SteamVR_Actions.default_SwitchMenu,
                    SteamVR_Actions.default_UltimateRadialMenuHover,
                    SteamVR_Actions.default_UltimateRadialMenuSelect,
                    SteamVR_Actions.default_InteractMain,
                    SteamVR_Actions.default_UIPointer,
                    SteamVR_Actions.default_Toggle_ActionSet,
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.platformer_VR_Brush_Btn,
                    SteamVR_Actions.platformer_MoveAround,
                    SteamVR_Actions.platformer_Move_Y_Axis,
                    SteamVR_Actions.platformer_ToggleFlying,
                    SteamVR_Actions.platformer_IncreaseFlyingSpd,
                    SteamVR_Actions.platformer_DecreaseFlyingSPd,
                    SteamVR_Actions.platformer_M_Forward,
                    SteamVR_Actions.platformer_M_Left,
                    SteamVR_Actions.platformer_M_Right,
                    SteamVR_Actions.platformer_M_Backward,
                    SteamVR_Actions.platformer_BigJump,
                    SteamVR_Actions.platformer_InverseBigJump,
                    SteamVR_Actions.platformer_Toggle_ActionSet,
                    SteamVR_Actions.platformer_TwoAxis,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.mixedreality_ExternalCamera};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_Trigger,
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_ThumbstickPosition,
                    SteamVR_Actions.default_Action1,
                    SteamVR_Actions.default_Action2,
                    SteamVR_Actions.default_ThumbstickButton,
                    SteamVR_Actions.default_MenuButton,
                    SteamVR_Actions.default_ScaleUp,
                    SteamVR_Actions.default_ScaleDown,
                    SteamVR_Actions.default_UndoButton,
                    SteamVR_Actions.default_RedoButton,
                    SteamVR_Actions.default_SwitchMenu,
                    SteamVR_Actions.default_UltimateRadialMenuHover,
                    SteamVR_Actions.default_UltimateRadialMenuSelect,
                    SteamVR_Actions.default_InteractMain,
                    SteamVR_Actions.default_UIPointer,
                    SteamVR_Actions.default_Toggle_ActionSet,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.platformer_VR_Brush_Btn,
                    SteamVR_Actions.platformer_MoveAround,
                    SteamVR_Actions.platformer_Move_Y_Axis,
                    SteamVR_Actions.platformer_ToggleFlying,
                    SteamVR_Actions.platformer_IncreaseFlyingSpd,
                    SteamVR_Actions.platformer_DecreaseFlyingSPd,
                    SteamVR_Actions.platformer_M_Forward,
                    SteamVR_Actions.platformer_M_Left,
                    SteamVR_Actions.platformer_M_Right,
                    SteamVR_Actions.platformer_M_Backward,
                    SteamVR_Actions.platformer_BigJump,
                    SteamVR_Actions.platformer_InverseBigJump,
                    SteamVR_Actions.platformer_Toggle_ActionSet,
                    SteamVR_Actions.platformer_TwoAxis,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.mixedreality_ExternalCamera};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_UIPointer,
                    SteamVR_Actions.mixedreality_ExternalCamera};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_Action1,
                    SteamVR_Actions.default_Action2,
                    SteamVR_Actions.default_ThumbstickButton,
                    SteamVR_Actions.default_MenuButton,
                    SteamVR_Actions.default_ScaleUp,
                    SteamVR_Actions.default_ScaleDown,
                    SteamVR_Actions.default_UndoButton,
                    SteamVR_Actions.default_RedoButton,
                    SteamVR_Actions.default_SwitchMenu,
                    SteamVR_Actions.default_UltimateRadialMenuSelect,
                    SteamVR_Actions.default_InteractMain,
                    SteamVR_Actions.default_Toggle_ActionSet,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.platformer_VR_Brush_Btn,
                    SteamVR_Actions.platformer_ToggleFlying,
                    SteamVR_Actions.platformer_IncreaseFlyingSpd,
                    SteamVR_Actions.platformer_DecreaseFlyingSPd,
                    SteamVR_Actions.platformer_M_Forward,
                    SteamVR_Actions.platformer_M_Left,
                    SteamVR_Actions.platformer_M_Right,
                    SteamVR_Actions.platformer_M_Backward,
                    SteamVR_Actions.platformer_BigJump,
                    SteamVR_Actions.platformer_InverseBigJump,
                    SteamVR_Actions.platformer_Toggle_ActionSet,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_Trigger,
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.buggy_Throttle};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.default_ThumbstickPosition,
                    SteamVR_Actions.default_UltimateRadialMenuHover,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_MoveAround,
                    SteamVR_Actions.platformer_Move_Y_Axis,
                    SteamVR_Actions.platformer_TwoAxis,
                    SteamVR_Actions.buggy_Steering};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_Trigger,
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_ThumbstickPosition,
                    SteamVR_Actions.default_Action1,
                    SteamVR_Actions.default_Action2,
                    SteamVR_Actions.default_ThumbstickButton,
                    SteamVR_Actions.default_MenuButton,
                    SteamVR_Actions.default_ScaleUp,
                    SteamVR_Actions.default_ScaleDown,
                    SteamVR_Actions.default_UndoButton,
                    SteamVR_Actions.default_RedoButton,
                    SteamVR_Actions.default_SwitchMenu,
                    SteamVR_Actions.default_UltimateRadialMenuHover,
                    SteamVR_Actions.default_UltimateRadialMenuSelect,
                    SteamVR_Actions.default_InteractMain,
                    SteamVR_Actions.default_Toggle_ActionSet,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.platformer_VR_Brush_Btn,
                    SteamVR_Actions.platformer_MoveAround,
                    SteamVR_Actions.platformer_Move_Y_Axis,
                    SteamVR_Actions.platformer_ToggleFlying,
                    SteamVR_Actions.platformer_IncreaseFlyingSpd,
                    SteamVR_Actions.platformer_DecreaseFlyingSPd,
                    SteamVR_Actions.platformer_M_Forward,
                    SteamVR_Actions.platformer_M_Left,
                    SteamVR_Actions.platformer_M_Right,
                    SteamVR_Actions.platformer_M_Backward,
                    SteamVR_Actions.platformer_BigJump,
                    SteamVR_Actions.platformer_InverseBigJump,
                    SteamVR_Actions.platformer_Toggle_ActionSet,
                    SteamVR_Actions.platformer_TwoAxis,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_InteractUI = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/InteractUI")));
            SteamVR_Actions.p_default_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Teleport")));
            SteamVR_Actions.p_default_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabPinch")));
            SteamVR_Actions.p_default_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabGrip")));
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/Squeeze")));
            SteamVR_Actions.p_default_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/HeadsetOnHead")));
            SteamVR_Actions.p_default_SnapTurnLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapTurnLeft")));
            SteamVR_Actions.p_default_SnapTurnRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapTurnRight")));
            SteamVR_Actions.p_default_Trigger = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/Trigger")));
            SteamVR_Actions.p_default_Grip = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/Grip")));
            SteamVR_Actions.p_default_ThumbstickPosition = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/ThumbstickPosition")));
            SteamVR_Actions.p_default_Action1 = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Action1")));
            SteamVR_Actions.p_default_Action2 = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Action2")));
            SteamVR_Actions.p_default_ThumbstickButton = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/ThumbstickButton")));
            SteamVR_Actions.p_default_MenuButton = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/MenuButton")));
            SteamVR_Actions.p_default_ScaleUp = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/ScaleUp")));
            SteamVR_Actions.p_default_ScaleDown = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/ScaleDown")));
            SteamVR_Actions.p_default_UndoButton = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/UndoButton")));
            SteamVR_Actions.p_default_RedoButton = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/RedoButton")));
            SteamVR_Actions.p_default_SwitchMenu = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SwitchMenu")));
            SteamVR_Actions.p_default_UltimateRadialMenuHover = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/UltimateRadialMenuHover")));
            SteamVR_Actions.p_default_UltimateRadialMenuSelect = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/UltimateRadialMenuSelect")));
            SteamVR_Actions.p_default_InteractMain = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/InteractMain")));
            SteamVR_Actions.p_default_UIPointer = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/UIPointer")));
            SteamVR_Actions.p_default_Toggle_ActionSet = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Toggle_ActionSet")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
            SteamVR_Actions.p_platformer_Move = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/platformer/in/Move")));
            SteamVR_Actions.p_platformer_Jump = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/Jump")));
            SteamVR_Actions.p_platformer_VR_Brush_Btn = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/VR_Brush_Btn")));
            SteamVR_Actions.p_platformer_MoveAround = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/platformer/in/MoveAround")));
            SteamVR_Actions.p_platformer_Move_Y_Axis = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/platformer/in/Move_Y_Axis")));
            SteamVR_Actions.p_platformer_ToggleFlying = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/ToggleFlying")));
            SteamVR_Actions.p_platformer_IncreaseFlyingSpd = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/IncreaseFlyingSpd")));
            SteamVR_Actions.p_platformer_DecreaseFlyingSPd = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/DecreaseFlyingSPd")));
            SteamVR_Actions.p_platformer_M_Forward = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/M_Forward")));
            SteamVR_Actions.p_platformer_M_Left = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/M_Left")));
            SteamVR_Actions.p_platformer_M_Right = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/M_Right")));
            SteamVR_Actions.p_platformer_M_Backward = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/M_Backward")));
            SteamVR_Actions.p_platformer_BigJump = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/BigJump")));
            SteamVR_Actions.p_platformer_InverseBigJump = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/InverseBigJump")));
            SteamVR_Actions.p_platformer_Toggle_ActionSet = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/Toggle_ActionSet")));
            SteamVR_Actions.p_platformer_TwoAxis = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/platformer/in/TwoAxis")));
            SteamVR_Actions.p_buggy_Steering = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/buggy/in/Steering")));
            SteamVR_Actions.p_buggy_Throttle = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/buggy/in/Throttle")));
            SteamVR_Actions.p_buggy_Brake = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/buggy/in/Brake")));
            SteamVR_Actions.p_buggy_Reset = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/buggy/in/Reset")));
            SteamVR_Actions.p_mixedreality_ExternalCamera = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/mixedreality/in/ExternalCamera")));
        }
    }
}
